........
.p......
...p....
........
N.......
.....p..
........
........
111
121
121
111

11
11
11
11
11

1  2  3  4
10 11 12 5
9  8  7  6

6

1 2  3  4
5 6  7  8
9 10 11 12

1 2 3 4 5
6 7 8 9 10
11 12 13 14 15
16 17 18 19 20

1  2  3  4  5
14 15 16 17 6
13 20 19 18 7
12 11 10 9  8

val=0
upShift=0
rightShift=0
downShift=0
leftShift=0
{
    i=0+leftShift..width-1-rightShift{
    M[0+upShift][i]=val++
    }

    j=1..length-1{
    M[j][width-1]=val++
    }

    k=width-2..0{
    M[k][length-1]=val++
    }

    l=lenght-2..1{
    M[l][0]=val++
    }

    upShift++
    rightShift++
    downShift++
    leftShift++

}

1

0,0,0,0

1  2  3  4
5  6  7  8
9  10 0 12
13 14 11 15

0 (3, 3)


12345678
123456789abcdefg

12  12  31  23  12  31  23
123123 12312 132 124 23 1


1231231   231   31231  2312  412321
12312333124124923875295743295793247
  12
1234567


fun myFun(names: List<String>, digits: String): Collection<Any> = TODO()
* На доске 8х8 клеток стоят фишки.
* Их координаты заданы строкой chipCoords вида
* “42 44 57 67 77 53 33 23 43 78”,

* где каждое двузначное число соответствует одной фишке,
* первая цифра соответствует X-координате (столбцу),
* вторая Y-координате (строке).
* Все координаты должны быть в диапазоне от 1 до 8.

*

* —----ф-

* —--ффф-

* —----—

* —----—

* —-ф--—

* -фффф-—

* —-ф--—

* —----—

*
* Найти самую длинную вертикальную последовательность фишек
* (в примере — 42, 43, 44). Фишки в последовательности должны
* располагаться в одном столбце и идти подряд.
*
* Имя и тип результата функции предложить самостоятельно.

*

* Если входные аргументы являются некорректными,

* бросить IllegalArgumentException

*

* Кроме функции, следует написать тесты,

* подтверждающие её работоспособность.

*/